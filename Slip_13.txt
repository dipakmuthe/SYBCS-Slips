Q1. Implement a stack library (ststack.h) of integers using a static 
implementation of the stack and implementing the operations like init(S), 
S=push(S) and S=pop(S). Write a driver program that includes stack library 
and calls different stack operations. [10]
==>  Header File 
-----------------------------------------------------
   #define MAX 5
struct stack
{
    int a[MAX];
    int top;
}s1;
void init()
{
    s1.top=-1;
}
int isempty()
{
    if(s1.top==-1)
     return 1;
    else
    return 0;
}
 int isfull()
 {
    if(s1.top==MAX-1)
    return 1;
    else 
    return 0;
 }
 void push(int num)
 {
    if(isfull())
    printf("\n Stack is full dont PUSH..");
    else 
    {
        s1.top++;
        s1.a[s1.top]=num;
        printf("\n PUSH Successful..........");
    }
 }
   void pop()
    {
       int val;
       if(isempty())
       {
        printf("\n Stack is empty dont pop");
       }
       else
       {
        val=s1.a[s1.top];
        s1.top--;
        printf("\n Poped value=%d",val);
        printf("\n no=%d",val);
       }
    }
    void disp()
    {
        int i;
        for(i=s1.top;i>=0;i--)
        {
            printf("%d\n",s1.a[i]);
        }
    }
---------------------------Program---------------------------------
   #include<stdio.h>
#include"stack.h"
  int main()
  {
    int ch,num;
    init();
    do{
        printf("\n 1-Push\n 2-POP\n 3-Display");
        printf("\nEnter the Choice:");
        scanf("%d",&ch);

        switch (ch)
        {
            
        case 1:printf("\nEnter Number:");
               scanf("%d",&num);
               push(num);
               break;
        
        case 2:pop();
               break;

        case 3:disp();
               break;

        default:printf("\n Inavalid Choice........");
            break;
        }
    }while (ch<4);
  }

Q2. Write a program that sorts the elements of linked list using bubble sort 
technique. [20]
==>
#include<stdio.h>
#include<stdlib.h>

typedef struct node
{
	int data;
	struct node *next;
}NODE;

NODE *create(NODE *head)
{
	int i,n;
	NODE *newnode,*temp;
	printf("enter limit");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		newnode=(NODE *)malloc(sizeof(NODE));
		printf("enter value");
		scanf("%d",&newnode->data);
		newnode->next=NULL;
		if(head==NULL)
		{
			head=temp=newnode;
		}
		else
		{
			temp->next=newnode;
			temp=newnode;
		}
	}
	return head;
}


void disp(NODE *head)
{
	NODE *temp;
	for(temp=head;temp!=NULL;temp=temp->next)
	{
		printf("%d\t",temp->data);
	}
}


NODE *bubble(NODE *head)
{
	NODE *temp1,*temp2;
	int t;
	for(temp1=head;temp1!=NULL;temp1=temp1->next)
	{
		for(temp2=head;temp2!=NULL;temp2=temp2->next)
		{
			if(temp1->data<temp2->data)
			{
				t=temp1->data;
				temp1->data=temp2->data;
				temp2->data=t;
			}
		}
	}
	return head;
}


int main()
{
	NODE *head=NULL;
	head=create(head);
	disp(head);
	printf("\n Bubble sort :");
	head=bubble(head);
	disp(head);
	
	}